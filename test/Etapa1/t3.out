CUESTIONARIO
============

PREGUNTA Sobrecarga_P18_1
COMENTARIO INICIAL:   
"Dada la siguiente definicion:\n`foo a b c d e = (snd . fst) ((a == e, b < e), c == d)`\nEl tipo mas general es {\n = `foo :: (Ord a, Eq b) \\=> a -> a -> b -> b -> a -> Bool`\n ~ `foo :: (Ord a) \\=> a -> a -> a -> a -> a -> Bool` \n = `foo :: (Ord a, Ord b, Eq c, Eq d, Ord e) \\=> a -> b -> c -> d -> e -> Bool` \n ~ No tiene  # Analice el tipo de `((a \\=\\= e, b < e), c \\=\\= d)`. Cuando puedo comparar dos valores?}\n"
COMENTARIO FINAL:  
------------
PREGUNTA Otras_P18_3
COMENTARIO INICIAL:  
"Dada la siguiente definicion:\n`map' f = (map (uncurry ($))) . box`\n\191Cual de las siguientes implementaciones de `box` hace que `map'` sea equivalente a `map`? {\n = `zip (repeat f)`\n = No hay implementacion posible de `box` para eso.\n = `zipWith f`\n = `zip f`\n}\n"
COMENTARIO FINAL:  
------------
PREGUNTA Otras_P18_4
COMENTARIO INICIAL:  
"Dada la siguiente definicion:\n`bar f n xs = concat $ map (f n) xs`\nCual de las siguientes afirmaciones no es correcta? {\n ~ `sum . bar const 1` $ \\equiv $ `length`\n ~ El tipo es `bar :: (a -> b -> [c]) -> a -> [b] -> [c]` \n ~ `bar take 2 [[1,2], [3,4,5]]` retorna `[1,2,3,4]` \n ~ `bar (\\\\f x -> [f x])` $ \\equiv $ `map`  \n}\n"
COMENTARIO FINAL:  
------------
PREGUNTA Algebraicos_P18_5
COMENTARIO INICIAL:  
"Cual de las siguientes afirmaciones es correcta? {\n = Dado `t` de tipo `A`, `snd (copia t)` siempre diverge o retorna un entero no negativo\n ~ El codigo no compila porque la definicion de `A` es incorrecta \n ~ El codigo no compila porque la definicion de `A` es incorrecta \n ~ El codigo no compila porque la definicion de `copia` es incorrecta \n ~ Dado `t` de tipo `A`, `fst (copia t)` siempre diverge o retorna `t`\n}\n"
COMENTARIO FINAL:  
 
------------
PREGUNTA Algebraicos_P18_5
COMENTARIO INICIAL:  
"Cual de las siguientes afirmaciones es correcta? {\n = Dado `t` de tipo `A`, `snd (copia t)` siempre diverge o retorna un entero no negativo\n ~ El codigo no compila porque la definicion de `A` es incorrecta \n ~ El codigo no compila porque la definicion de `copia` es incorrecta \n ~ Dado `t` de tipo `A`, `fst (copia t)` siempre diverge o retorna `t`\n ~ El codigo no compila porque la definicion de `A` es incorrecta \n}\n"
COMENTARIO FINAL:  
------------
PREGUNTA Algebraicos_P18_6
COMENTARIO INICIAL:  
"Dadas las siguientes definiciones:\n`data T = C1 | C2 Int Int | C3 T T`, \n`baz C1       = 0`,\n`baz (C2 x y) = x`, \n`baz (C3 x y) = baz x`.\n\191Cual de las siguientes afirmaciones es correcta? {\n = El resultado de evaluar `baz (C3 (C2 3 4) (C3 (C2 1 2) C1))` es `3`\n ~ El resultado   de evaluar `baz (C3 (C2 3 4) (C3 (C2 1 2) C1))` es `7`\n ~   El   resultado de   evaluar `baz (C3 (C2 3 4) (C3 (C2 1 2) C1))` es `7`\n ~ El resultado de evaluar `baz (C3 (C2 3 4) (C3 (C2 1 2) C1))` es `1`\n ~ El codigo no compila\n}\n"
COMENTARIO FINAL:  
------------
PREGUNTA Fold_P18_7
COMENTARIO INICIAL:  
"Dada la siguiente definicion:\n`qux f []     ys = ys`\n`qux f (x:xs) ys = qux f xs (f x : ys)`\nCual de las siguientes afirmaciones es correcta? {\n = `qux f` $ \\equiv $ `flip $ foldl (\\\\r x -> f x : r)`\n ~ `qux f` $   \\equiv $ `foldl (\\\\r x -> f x : r)`\n ~ `qux f` $ \\equiv + 2 $ `foldl (\\\\r x -> f x : r)`\n ~ `qux f` $ \\equiv +  2 $ `flip $ foldr (\\\\x r -> f x : r)`\n ~ `qux f` $ \\equiv $ `foldr (\\\\x r -> f x : r)` \n}\n"
COMENTARIO FINAL:  
------------
